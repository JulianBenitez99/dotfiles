#!/bin/bash
# Check out https://gist.github.com/bashbunni/f6b04fc4703903a71ce9f70c58345106
# For macos
# brew install terminal-notifier
# brew install caarlos0/tap/timer


# start defaults to 4 working sessions of 25m with 5m rest and a last session with a 15m rest
usage () {
    cat <<EOF
USAGE: pomodoro [OPTION] [start|work|rest]
  Options: 
    -h Print this help message
    -t Timer time (default: 25m work | 5m rest)
    -r Rounds (default: 4)
EOF
}


start(){
  ROUNDS="${ROUNDS:-4}"
  for i in $(seq 1 $ROUNDS);
  do
    echo "[${i}/${ROUNDS}]"
    work
    if [[ $i -eq ${ROUNDS} ]]; then
      TIME="15m"
    fi
    sleep 1
    rest
  done
}

work() {
  TIME="${TIME:-"25m"}"
  echo "Work!"
  timer $TIME && terminal-notifier -message 'Pomodoro' \
    -title 'Work Timer is up!' \
    -sound 'Glass'
  unset TIME
}

rest() {
  TIME="${TIME:-"5m"}" 
  echo "Rest!"
  timer $TIME && terminal-notifier -message 'Pomodoro' \
    -title 'Break is Over!' \
    -sound 'Ping'
  unset TIME
}


while getopts "hr:t:" option; do
  case "${option}" in
    r)
      ROUNDS="$OPTARG"
      ;;
    t)
      TIME="$OPTARG"
      ;;
    h)
      usage
      exit
      ;;
    *)
      echo "Invalid option: -$OPTARG"
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

while [[ $# -gt 0 ]]
do
  case $1 in
    work)
      work
      exit
      ;;
    rest)
      rest
      exit
      ;;
    start)
      start
      exit
      ;;
    *)
      echo "Invalid $1 option"
      usage
      exit 1
      ;;
  esac
  shift
done

